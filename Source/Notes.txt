/*******************************************************************************
Mit Math-Ml scheint es endlich einen Weg zu geben//
qtmmlwidget-2.4_1-opensource.tar.gz //
*******************************************************************************/
classes {
	CWndMain : QMainWindow
	CGuiMatrix : QObject (singleton)
	CMatrixTableView : QTableView (setIndexWidget(mmlWdgtRow))
	CMmlWdgtRow : CMmlWdgtBase
	CMmlWdgtBase : QWidget
}
Qt5 und MinGw {
	Qt5.14.1 bringt in D:\Qt\Tools\mingw730_64\bin mingw schon mit!//
	Dies ist allerdings dynamisch gelinkt, dlls und plugins muessen ins Setup.
	Environment {//
		set MINGW_BIN=D:\Qt\Tools\mingw730_64\bin
		set QTDIR=D:\Qt\5.14.1\mingw73_64
		path=%path%;%QTDIR%\bin;%MINGW_BIN%
	}
}
Koordinate direkt in Faktor/Monomial zulassen { !
	Neben Integral und Ableitung kann eine Koordinate auch direkt vorkommen (z.B. in einer Variante des Kondo-Modells).
	Dies sollte per ESymbol realisiert werden, am Einfachsten als ESymbol::none. //
	CGlyphCoordinate::m_Symb. //
	Die einzige Änderungen sind { -
		1) Anzeige der Koordinate.//
		2) Drag von Koordinate zulassen.//
		3) Koordinate kann (wie ein Feld) Exponenten haben//
		4) Laden/Speichern //
		5) Dimensionswert bei Auswertung.//
		6) Print Result OK? (nichts zu tun)//
	}
}
Wellenvektor anstelle von Koordinate { ?
	Konfusion bei Interpretation { !
		Dimension der Koordinate sollte dieselbe sein? -
		Was ist dann aber mit den anderen Größen? $
		Es treten ja die FT der Felder auf -
		Und auch andere Koordinaten/Felder sind umzuinterpretieren.
		The algebra determining the scaling dimensions and the critical dimension also works in wave vector space.
		However, the convention of assigning a (wave vector) dimension of -1 to the d-dimensional (first) coordinate then implies,
		that the calculated scaling dimensions are coordinate (and not wave vector) dimensions.
		And of course, scaling dimensions of fields and fourier transforms of fields differ by a value d.
	}
}


